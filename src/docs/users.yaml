openapi: 3.0.0
info:
  title: API de Usuarios
  description: Documentación de la API para gestionar usuarios
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor local

components:
  schemas:
    User:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
          example: "John"
        last_name:
          type: string
          description: Apellido del usuario
          example: "Doe"
        email:
          type: string
          description: Correo electrónico único del usuario
          example: "john.doe@example.com"
        age:
          type: integer
          description: Edad del usuario
          example: 25
        password:
          type: string
          description: Contraseña del usuario
          example: "mypassword123"
        cart:
          type: string
          description: ID del carrito asociado al usuario
          example: "63f2c1845e8b3d36f44b65f9"
        role:
          type: string
          description: Rol del usuario (user/admin)
          example: "user"
      required:
        - first_name
        - last_name
        - email
        - password

  responses:
    success:
      type: object
      properties:
        response:
          type: object
          description: Respuesta de éxito con los datos del usuario
        message:
          type: string
          description: Mensaje de la operación exitosa
      example:
        response: { "first_name": "John", "last_name": "Doe", "email": "john.doe@example.com", "age": 25 }
        message: "Operación exitosa"

paths:
  /api/sessions/login:
    post:
      summary: Iniciar sesión
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "mypassword123"
      responses:
        200:
          description: Sesión iniciada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/responses/success'

  /api/sessions/refresh-token:
    post:
      summary: Actualizar el token de sesión
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: "someRefreshToken123"
      responses:
        200:
          description: Token actualizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Nuevo token de acceso
                    example: "newAccessToken123"

  /api/sessions/register:
    post:
      summary: Registrar un nuevo usuario
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/responses/success'

  /api/sessions/update:
    put:
      summary: Actualizar información del usuario actual
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Información actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/responses/success'

  /api/sessions/logout:
    get:
      summary: Cerrar sesión
      tags:
        - User
      responses:
        200:
          description: Sesión cerrada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Sesión cerrada correctamente"

  /api/sessions/current:
    get:
      summary: Obtener información del usuario actual
      tags:
        - User
      responses:
        200:
          description: Usuario actual obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/responses/success'

  /api/sessions/delete/{id}:
    delete:
      summary: Eliminar un usuario por ID
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: ID del usuario
      responses:
        200:
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/responses/success'
